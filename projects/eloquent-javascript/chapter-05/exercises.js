// /////////////////////////////////////////////////////////////////////////////
// flatten /////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

//const { characterScript } = require("./helpers");

/*
I:
O:
C: use reduce() and concat()
E:
*/
function flatten(matrix) {
  return matrix.reduce((acc, curr) => acc.concat(curr), []);
}

// /////////////////////////////////////////////////////////////////////////////
// loop ////////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function loop(value, testFunc, updateFunc, bodyFunc) {
  if(!testFunc(value)){
    return;
  }
  bodyFunc(value);
  return loop(updateFunc(value), testFunc, updateFunc, bodyFunc);
}

// /////////////////////////////////////////////////////////////////////////////
// every ///////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function every(array, test) {
  for(element of array){
    if(!test(element)){
      return false;
    }
  }
  return true;
}

// /////////////////////////////////////////////////////////////////////////////
// dominantDirection ///////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function dominantDirection(string) {
 
  let ltr = [];
  let rtl = [];

  for (let i = 0; i < string.length; i++){

    let script = characterScript(string.charCodeAt(i)); 

    if(script !== null){
      if(script.direction === 'ltr'){
        ltr.push(script);
      } else {
        rtl.push(script);
      }
    }
  }

  if(ltr.length > rtl.length){
    return 'ltr'; 
  } else {
    return 'rtl';
  }
}

// /////////////////////////////////////////////////////////////////////////////
//  //////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

if ((typeof process !== 'undefined') &&
  (typeof process.versions.node !== 'undefined')) {
  module.exports = {
    flatten,
    loop,
    every,
    dominantDirection,
  };
};
